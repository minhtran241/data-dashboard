# HTTP â€” redirect all traffic to HTTPS
server {
        listen 80;
        listen [::]:80 default_server ipv6only=on;
        return 301 https://$host$request_uri;
}
server {
        # Enable HTTP/2
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name chart.vfsc.vn;

        location / {
                root /var/www/dist;
                index index.html;
        }

        # Connect to socket io server
        location ~* \.io {
                proxy_pass http://127.0.0.1:8080;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Host $host;
                proxy_cache_bypass $http_upgrade;
                proxy_set_header Connection 'upgrade';
        }

        location /api/v1/signal {
                proxy_pass http://localhost:8080/signal;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Host $host;
                proxy_set_header content-type "application/json";
                proxy_cache_bypass $http_upgrade;
                proxy_set_header Connection 'upgrade';
        }

        location /api/v1/health {
                proxy_pass http://localhost:8080/health;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Host $host;
                proxy_set_header content-type "application/json";
                proxy_cache_bypass $http_upgrade;
                proxy_set_header Connection 'upgrade';
        }
        # listen 443 ssl; # managed by Certbot
        ssl_certificate /etc/letsencrypt/live/chart.vfsc.vn/fullchain.pem; # managed by Certbot
        ssl_certificate_key /etc/letsencrypt/live/chart.vfsc.vn/privkey.pem; # managed by Certbot
        include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
        ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
}